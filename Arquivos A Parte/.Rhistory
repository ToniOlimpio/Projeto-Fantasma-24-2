freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
) %>%
arrange(desc(n))
female_medalhistEUA <- filter(female_medalhistF, Team == "United States")
female_medalhistRUSSIA <- filter(female_medalhistF, Team == "Russia")
female_medalhistGERMANY <- filter(female_medalhistF, Team == "Germany")
female_medalhistCHINA <- filter(female_medalhistF, Team == "China")
female_medalhistAUSTRALIA <- filter(female_medalhistF, Team == "Australia")
female_medalhistMULTI <- rbind(female_medalhistAUSTRALIA, female_medalhistCHINA, female_medalhistEUA, female_medalhistGERMANY, female_medalhistRUSSIA)
View(female_medalhistMULTI)
top5_medalhist_gen <- female_medalhistMULTI
View(top5_medalhist_gen)
top5_medalhist_gen$Team <- factor(top5_medalhist_gen$Team, levels = c('Estados Unidos', 'Russia', 'Alemanha', 'China', 'Australia'))
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medal, levels = c('Ouro', 'Prata', 'Bronze'))
names(top5_medalhist_gen)[2] <- "Medalha"
top5_medalhist_gen <- female_medalhistMULTI
top5_medalhist_gen[1:15,2] = c("Prata", "Ouro", "Bronze", "Ouro", "Prata", "Bronze", "Ouro", "Prata", "Bronze", "Bronze", "Ouro", "Prata", "Prata", "Ouro", "Bronze")
top5_medalhist_gen$Team <- factor(top5_medalhist_gen$Team, levels = c('Estados Unidos', 'Russia', 'Alemanha', 'China', 'Australia'))
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medal, levels = c('Ouro', 'Prata', 'Bronze'))
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, n, .desc = T), y = n,
fill = Medalha, label = n
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
names(top5_medalhist_gen)[2] <- "Medalha"
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, n, .desc = T), y = n,
fill = Medalha, label = n
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
top5_medalhist_gen <- female_medalhistMULTI
names(top5_medalhist_gen)[2] <- "Medalha"
top5_medalhist_gen[7:9,1] = c("Estados Unidos")
top5_medalhist_gen[10:12,1] = c("Alemanha")
top5_medalhist_gen[1:15,2] = c("Prata", "Ouro", "Bronze", "Ouro", "Prata", "Bronze", "Ouro", "Prata", "Bronze", "Bronze", "Ouro", "Prata", "Prata", "Ouro", "Bronze")
top5_medalhist_gen$Team <- factor(top5_medalhist_gen$Team, levels = c("Estados Unidos", 'Russia', "Alemanha", 'China', 'Australia'))
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medalha, levels = c('Ouro', 'Prata', 'Bronze'))
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, n, .desc = T), y = n,
fill = Medalha, label = n
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, freq, .desc = T), y = freq,
fill = Medalha, label = n
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, n, .desc = T), y = n,
fill = Medalha, label = label
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medalha, levels = c('Ouro', 'Prata', 'Bronze'))
ggplot(top5_medalhist_gen) +
aes(
x = fct_reorder(Team, n, .desc = T), y = n,
fill = Medalha, label = label
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Equipe olímpica", y = "Quantidade de medalhas") +
theme_estat()
library(tidyverse)
library(psych)
library(readxl)
Olimpiadas_2000_2016 <- read_excel("~/CE1/Olimpiadas 2000 - 2016.xlsx")
View(Olimpiadas_2000_2016)
#Criando a coluna IMC e colocando o peso e a altura na medida certa
Olimpiadas <- Olimpiadas_2000_2016
Olimpiadas$`Height (cm)` <- Olimpiadas$`Height (cm)` / 100
Olimpiadas$`Weight (lbs)` <- Olimpiadas$`Weight (lbs)` * 0.45359237
Olimpiadas$IMC <- Olimpiadas$`Weight (lbs)` / Olimpiadas$`Height (cm)`^2
#Traduzindo as variaveis
names(Olimpiadas)[4] <- "Altura (M)"
names(Olimpiadas)[5] <- "Peso (Kg)"
names(Olimpiadas)[7] <- "Esporte"
#Preparando o banco de dados para o gráfico
Olimpiadas <- count(Olimpiadas, Names, Esporte, IMC, sort = T)
Ginástica <- filter(Olimpiadas, Esporte == "Gymnastics")
Ginástica[2] <- "Ginástica"
Futebol <- filter(Olimpiadas, Esporte == "Football")
Futebol[2] <- "Futebol"
Judô <- filter(Olimpiadas, Esporte == "Judo")
Judô[2] <- "Judô"
Atletismo <- filter(Olimpiadas, Esporte == "Athletics")
Atletismo[2] <- "Atletismo"
Badminton <- filter(Olimpiadas, Esporte == "Badminton")
Esportes_analise <- rbind(Ginástica, Futebol, Judô, Atletismo, Badminton)
Esportes_analise <- filter(Esportes_analise, IMC != "NA")
View(Esportes_analise)
ggplot(Esportes_analise) +
aes(x = reorder(Esporte,IMC , FUN = median), y = IMC) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white"
) +
labs(x = "Esportes", y = "IMC")+
theme_estat()
estat_colors <- c(
"#A11D21", "#003366", "#CC9900",
"#663333", "#FF6600", "#CC9966",
"#999966", "#006606", "#008091",
"#041835", "#666666" )
theme_estat <- function(...) {
theme <- ggplot2::theme_bw() +
ggplot2::theme(
axis.title.y = ggplot2::element_text(colour = "black", size = 12),
axis.title.x = ggplot2::element_text(colour = "black", size = 12),
axis.text = ggplot2::element_text(colour = "black", size = 9.5),
panel.border = ggplot2::element_blank(),
axis.line = ggplot2::element_line(colour = "black"),
legend.position = "top",
...
)
return(
list(
theme,
scale_fill_manual(values = estat_colors),
scale_colour_manual(values = estat_colors)
)
)
}
ggplot(Esportes_analise) +
aes(x = reorder(Esporte,IMC , FUN = median), y = IMC) +
geom_boxplot(fill = c("#A11D21"), width = 0.5) +
stat_summary(
fun = "mean", geom = "point", shape = 23, size = 3, fill = "white"
) +
labs(x = "Esportes", y = "IMC")+
theme_estat()
Esportes_analise %>% filter(!is.na(IMC)) %>% quantile(IMC, probs = c(0.25, 0.75))
Esportes_analise %>% filter(!is.na(IMC)) %>% quantile(Esportes_analise$IMC, probs = c(0.25, 0.75))
quantile(Esportes_analise$Names, probs = c(0.25, 0.75))
quantile(Esportes_analise$Names, probs = c(0.25, 0.75, na.rm = TRUE))
quantile(Esportes_analise$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
describe(Futebol$IMC)
quantile(Futebol$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
quantile(Futebol$IMC, probs = c(0.25, 0.75, na.rm = TRUE))0
quantile(Futebol$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
quantile(Futebol$IMC, probs = c(0.25, 0.75,na.rm = TRUE))
quantile(Judô$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
quantile(Judô$IMC, probs = c(0.25, 0.75))
quantile(Judô$IMC, probs = c(0.25, 0.75, na.rm = T))
quantile(Judô$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
sum(is.nan(Futebol))
Futebol$IMC <- unlist(Futebol$IMC)
quantile(Futebol$IMC, probs = c(0.25, 0.75, na.rm = TRUE))
sum(is.nan(Futebol))
sum(Futebol$IMC)
View(Futebol)
View(Esportes_analise)
Futebol$IMC <- !is.na(Futebol$IMC)
View(Futebol)
Futebol <- filter(Olimpiadas, Esporte == "Football")
Futebol[2] <- "Futebol"
Futebol$IMC <- filter(Futebol, IMC != 'NA')
Futebol$IMC <- filter(Futebol, IMC != NA)
FutebolLimpo$IMC <- filter(Futebol, IMC != NA)
FutebolLimpo <- filter(Futebol, IMC != NA)
View(FutebolLimpo)
FutebolLimpo <- filter(Futebol, IMC != "NA")
View(FutebolLimpo)
quantile(FutebolLimpo$IMC, probs = c(0.25, 0.75))
FutebolLimpo <- filter(Futebol, IMC != "NA")
describe(FutebolLimpo$IMC)
quantile(FutebolLimpo$IMC, probs = c(0.25, 0.75))
GinasticaLimpo <- filter(Ginástica, IMC != "NA")
describe(GinasticaLimpo$IMC)
quantile(GinasticaLimpo$IMC, probs = c(0.25, 0.75))
AtletismoLimpo <- filter(Atletismo, IMC != "NA")
describe(Atletismo$IMC)
quantile(AtletismoLimpo$IMC, probs = c(0.25, 0.75))
variancia <- var(FutebolLimpo$IMC)
dp <- sd(FutebolLimpo$IMC)
dp <- sd(AtletismoLimpoLimpo$IMC)
dp <- sd(AtletismoLimpo$IMC)
variancia <- var(AtletismoLimpo$IMC)
BadLimpo <- filter(Badminton, IMC != "NA")
describe(Badminton$IMC)
quantile(BadLimpo$IMC, probs = c(0.25, 0.75))
var(GinasticaLimpo$IMC)
describe(Badminton$IMC)
quantile(BadLimpo$IMC, probs = c(0.25, 0.75))
var(BadLimpo$IMC)
FutebolLimpo <- filter(Futebol, IMC != "NA")
describe(FutebolLimpo$IMC)
quantile(FutebolLimpo$IMC, probs = c(0.25, 0.75))
var(FutebolLimpo$IMC)
JudoLimpo <- filter(Judô, IMC != "NA")
describe(Judô$IMC)
quantile(JudoLimpo$IMC, probs = c(0.25, 0.75))
var(JudoLimpo$IMC)
library(readxl)
Olimpiadas_2000_2016 <- read_excel("~/CE1/Olimpiadas 2000 - 2016.xlsx")
View(Olimpiadas_2000_2016)
Medalhistas <- filter(Olimpiadas_2000_2016, Medal != "NA")
Medalhistas_Pes <- count(Medalhistas, Names, Medalhistas$'Height (cm)', Medalhistas$'Weight (lbs)')
names(Medalhistas_Pes)[2] <- "Altura"
names(Medalhistas_Pes)[3] <- "Peso"
Medalhistas_Pes$Peso <- Medalhistas_Pes$Peso * 0.45359237
Medalhistas_Pes <- Medalhistas_Pes[-945,] #Removendo um dado que está NA
Medalhistas_Pes$Peso <- format(Medalhistas_Pes$Peso, nsmall = 0)
#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
aes(x = Altura, y = Peso) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Peso (em Kg)",
y = "Altura (em M)"
) +
theme_estat()
estat_colors <- c(
"#A11D21", "#003366", "#CC9900",
"#663333", "#FF6600", "#CC9966",
"#999966", "#006606", "#008091",
"#041835", "#666666" )
theme_estat <- function(...) {
theme <- ggplot2::theme_bw() +
ggplot2::theme(
axis.title.y = ggplot2::element_text(colour = "black", size = 12),
axis.title.x = ggplot2::element_text(colour = "black", size = 12),
axis.text = ggplot2::element_text(colour = "black", size = 9.5),
panel.border = ggplot2::element_blank(),
axis.line = ggplot2::element_line(colour = "black"),
legend.position = "top",
...
)
return(
list(
theme,
scale_fill_manual(values = estat_colors),
scale_colour_manual(values = estat_colors)
)
)
}
#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
aes(x = Altura, y = Peso) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Peso (em Kg)",
y = "Altura (em M)"
) +
theme_estat()
ggsave("disp_uni.pdf", width = 158, height = 93, units = "mm")
#Medidas
describe(Medalhistas_Pes$Altura)
describe(Medalhistas_Pes$Peso)
#Medidas
Medalhistas_Pes$Peso <- filter(Medalhistas_Pes, Peso != "NA")
describe(Medalhistas_Pes$Peso)
describe(Medalhistas_Pes$Peso)
cor(Medalhistas_Pes$Altura, Medalhistas_Pes$Peso, method = "pearson")
View(Medalhistas_Pes)
Medalhistas <- filter(Olimpiadas_2000_2016, Medal != "NA")
Medalhistas_Pes <- count(Medalhistas, Names, Medalhistas$`Height (cm)`, Medalhistas$`Weight (lbs)`)
names(Medalhistas_Pes)[2] <- "Altura"
names(Medalhistas_Pes)[3] <- "Peso"
Medalhistas_Pes$Peso <- Medalhistas_Pes$Peso * 0.45359237
Medalhistas_Pes <- Medalhistas_Pes[-945,] #Removendo um dado que está NA
Medalhistas_Pes$Peso <- format(Medalhistas_Pes$Peso, nsmall = 0)
#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
aes(x = Altura, y = Peso) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Peso (em Kg)",
y = "Altura (em Cm)"
) +
theme_estat()
ggsave("disp_uni.pdf", width = 158, height = 93, units = "mm")
#Medidas
Medalhistas_Pes$Peso <- filter(Medalhistas_Pes, Peso != "NA")
describe(Medalhistas_Pes$Altura)
describe(Medalhistas_Pes$Peso)
cor(Medalhistas_Pes$Altura, Medalhistas_Pes$Peso, method = "pearson")
Medalhistas <- filter(Olimpiadas_2000_2016, Medal != "NA")
Medalhistas_Pes <- count(Medalhistas, Names, Medalhistas$`Height (cm)`, Medalhistas$`Weight (lbs)`)
names(Medalhistas_Pes)[2] <- "Altura"
names(Medalhistas_Pes)[3] <- "Peso"
Medalhistas_Pes$Peso <- Medalhistas_Pes$Peso * 0.45359237
Medalhistas_Pes <- Medalhistas_Pes[-945,] #Removendo um dado que está NA
#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
aes(x = Altura, y = Peso) +
geom_point(colour = "#A11D21", size = 3) +
labs(
x = "Peso (em Kg)",
y = "Altura (em Cm)"
) +
theme_estat()
ggsave("disp_uni.pdf", width = 158, height = 93, units = "mm")
#Medidas
Medalhistas_Pes$Peso <- filter(Medalhistas_Pes, Peso != "NA")
describe(Medalhistas_Pes$Altura)
describe(Medalhistas_Pes$Peso)
cor(Medalhistas_Pes$Altura, Medalhistas_Pes$Peso, method = "pearson")
Medalhistas <- filter(Olimpiadas_2000_2016, Medal != "NA")
Medalhistas_Pes <- count(Medalhistas, Names, Medalhistas$`Height (cm)`, Medalhistas$`Weight (lbs)`)
names(Medalhistas_Pes)[2] <- "Altura"
names(Medalhistas_Pes)[3] <- "Peso"
Medalhistas_Pes$Peso <- Medalhistas_Pes$Peso * 0.45359237
Medalhistas_Pes <- Medalhistas_Pes[-945,] #Removendo um dado que está NA
#Medidas
describe(Medalhistas_Pes$Altura)
describe(Medalhistas_Pes$Peso)
cor(Medalhistas_Pes$Altura, Medalhistas_Pes$Peso, method = "pearson")
var(Medalhistas_Pes$Altura)
var(Medalhistas_Pes)
var(Medalhistas_Pes$Peso)
#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
aes(x = Altura, y = Peso) +
geom_shutter(colour = "#A11D21", size = 3) +
labs(
x = "Peso (em Kg)",
y = "Altura (em Cm)"
) +
theme_estat()
#Organizando o banco de dados
AtletasUnidade <- filter(Olimpiadas_2000_2016, Medal != 'NA')
AtletasUni <- count(AtletasUnidade, Names)
AtletasUni <- AtletasUni[order(AtletasUni$n, decreasing = TRUE),]
AtletasTop3 <- AtletasUni[1:5, ]
Medalhas_Geral <- count(AtletasUnidade, Names, Medal)
Medalhas_Geral_Top3 <- Medalhas_Geral %>% filter(Names %in% AtletasTop3$Names)
#Preparando para o gráfico
Olimpiadas_2000_2016 %>%
filter(!is.na(Medal)) %>%
count(Names, Medal) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
View(Olimpiadas_2000_2016)
#Preparando para o gráfico
Graph <- Olimpiadas_2000_2016 %>%
Graph <- Olimpiadas_2000_2016 %>%
filter(!is.na(Medal)) %>%
count(Names, Medal) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
View(Medalhas_Geral_Top3)
View(Medalhas_Geral_Top3)
View(Medalhas_Geral)
View(Medalhas_Geral_Top3)
ggsave("colunas-bi-freq.pdf", width = 158, height = 93, units = "mm"
#Grafico
ggplot(Medalhas_Geral_Top3) +
ggplot(Medalhas_Geral_Top3) +
aes(
x = fct_reorder(Names, n, .desc = T), y = n,
fill = Medal, label = n
) +
geom_col(position = position_dodge2(preserve = "single", padding =
0)) +
geom_text(
position = position_dodge(width = .9),
vjust = -0.5, hjust = 0.5,
size = 3
) +
labs(x = "Nome do atleta", y = "Quantia de cada medalha") +
theme_estat()
#Filtrando primeiramente as mulheres do banco de dados e separando elas por contagem de país e
#país por medalha e separando os 5 primeiros
female_olympic <- filter(Olimpiadas_2000_2016, Gender == "F")
female_medalhist <- filter(female_olympic, Medal != "NA")
medalhist_country <- female_medalhist %>% count(Team, Medal, sort = TRUE)
medalhist_country_solo <- female_medalhist %>%
count(Team) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
) %>%
arrange(desc(n))
top5_medalhist_solo <- medalhist_country_solo[1:5,]
top5_medalhist_solo$Team <- factor(top5_medalhist_solo$Team, levels = c('Estados Unidos', 'Russia', 'Alemanha', 'China', 'Australia'))
#Ajeitando os dados para multivariado
female_medalhistF <- female_medalhist %>%
count(Team, Medal) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
) %>%
arrange(desc(n))
female_medalhistEUA <- filter(female_medalhistF, Team == "United States")
female_medalhistRUSSIA <- filter(female_medalhistF, Team == "Russia")
female_medalhistGERMANY <- filter(female_medalhistF, Team == "Germany")
female_medalhistCHINA <- filter(female_medalhistF, Team == "China")
female_medalhistAUSTRALIA <- filter(female_medalhistF, Team == "Australia")
female_medalhistMULTI <- rbind(female_medalhistAUSTRALIA, female_medalhistCHINA, female_medalhistEUA, female_medalhistGERMANY, female_medalhistRUSSIA)
top5_medalhist_gen <- female_medalhistMULTI
names(top5_medalhist_gen)[2] <- "Medalha"
#Trocando o nome das variaveis para ficar em Português
top5_medalhist_solo[1:5,1] = c("Estados Unidos", "Russia", "Alemanha", "China", "Australia")
top5_medalhist_gen[7:9,1] = c("Estados Unidos")
top5_medalhist_gen[10:12,1] = c("Alemanha")
top5_medalhist_gen[1:15,2] = c("Prata", "Ouro", "Bronze", "Ouro", "Prata", "Bronze", "Ouro", "Prata", "Bronze", "Bronze", "Ouro", "Prata", "Prata", "Ouro", "Bronze")
top5_medalhist_gen$Team <- factor(top5_medalhist_gen$Team, levels = c("Estados Unidos", 'Russia', "Alemanha", 'China', 'Australia'))
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medalha, levels = c('Ouro', 'Prata', 'Bronze'))
#Criando o gráfico univariado
sla <- female_medalhist %>%
count(Team, Medal) %>%
mutate(
freq = n,
relative_freq = round((freq / sum(freq)) * 100, 1),
freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
label = str_c(n, " (", freq, ")") %>% str_squish()
) %>%
arrange(desc(n))
View(sla)
View(Olimpiadas_2000_2016)
View(Olimpiadas_2000_2016)
Felps <- filter(Olimpiadas_2000_2016, Names == "Michael Fred Phelps")
Felps <- filter(Olimpiadas_2000_2016, Names == "Michael Fred Phelps, II")
View(Felps)
Nomes <- count(Olimpiadas_2000_2016, Names)
View(Nomes)
top3 <- table(count(Olimpiadas_2000_2016$Names)
top3 <- table(count(Olimpiadas_2000_2016$Names)
top <- table(count(Olimpiadas_2000_2016$Names)
top <- table(count(Olimpiadas_2000_2016$Names))
view(top5_medalhist_gen)
top <- table(count(Olimpiadas_2000_2016$Names))
topmedalistas <- banco %>%
group_by(Name) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
head(3)
topmedalistas <- Olimpiadas_2000_2016 %>%
group_by(Name) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
head(3)
topmedalistas <- Olimpiadas_2000_2016 %>%
group_by(Names) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
head(3)
View(topmedalistas)
topmedalistas <- Olimpiadas_2000_2016 %>%
group_by(Names) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
head(3)
library(tidyverse)
library(psych)
topmedalistas <- Olimpiadas_2000_2016 %>%
group_by(Names) %>%
summarize(freq = n()) %>%
arrange(desc(freq)) %>%
head(3)
View(topmedalistas)
