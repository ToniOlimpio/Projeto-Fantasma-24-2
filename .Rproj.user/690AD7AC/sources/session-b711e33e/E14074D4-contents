########################################
#    Recursos utilizados na análise    #
########################################

install.packages("quarto")
tinytex::install_tinytex()
tinytex::tinytex_root()
library(tidyverse)
library(psych)

estat_colors <- c(
  "#A11D21", "#003366", "#CC9900",
  "#663333", "#FF6600", "#CC9966",
  "#999966", "#006606", "#008091", 
  "#041835", "#666666" )

theme_estat <- function(...) {
  theme <- ggplot2::theme_bw() +
    ggplot2::theme(
      axis.title.y = ggplot2::element_text(colour = "black", size = 12),
      axis.title.x = ggplot2::element_text(colour = "black", size = 12),
      axis.text = ggplot2::element_text(colour = "black", size = 9.5),
      panel.border = ggplot2::element_blank(),
      axis.line = ggplot2::element_line(colour = "black"),
      legend.position = "top",
      ...
    )
  
  return(
    list(
      theme,
      scale_fill_manual(values = estat_colors),
      scale_colour_manual(values = estat_colors)
    )
  )
}


################
#  Analise 1   #
################


#Filtrando primeiramente as mulheres do banco de dados e separando elas por contagem de país e 
#país por medalha e separando os 5 primeiros

female_olympic <- filter(Olimpiadas_2000_2016, Gender == "F")
female_medalhist <- filter(female_olympic, Medal != "NA")
medalhist_country <- female_medalhist %>% count(Team, Medal, sort = TRUE)
medalhist_country_solo <- female_medalhist %>%
  count(Team) %>%
  mutate(
    freq = n,
    relative_freq = round((freq / sum(freq)) * 100, 1),
    freq = gsub("\\.", ",", relative_freq) %>% paste("%", sep = ""),
    label = str_c(n, " (", freq, ")") %>% str_squish()
  ) %>%
  arrange(desc(n))

top5_medalhist_solo <- medalhist_country_solo[1:5,]
top5_medalhist_solo$Team <- factor(top5_medalhist_solo$Team, levels = c('Estados Unidos', 'Russia', 'Alemanha', 'China', 'Australia'))


#Trocando o nome das variaveis para ficar em Português

top5_medalhist_solo[1:5,1] = c("Estados Unidos", "Russia", "Alemanha", "China", "Australia")
top5_medalhist_gen[1:15,1] = c("Estados Unidos", "Estados Unidos", "Estados Unidos", "China", "Russia", "Australia", "Alemanha", "Alemanha", "Russia", "Russia", "Australia", "China", "Alemanha", "Australia", "China")
top5_medalhist_gen[1:15,2] = c("Ouro", "Prata", "Bronze", "Ouro", "Prata", "Prata", "Bronze", "Ouro", "Ouro", "Bronze", "Ouro", "Prata", "Prata", "Bronze", "Bronze")

#Criando o gráfico univariado

 ggplot(top5_medalhist_solo) +
  aes(x = fct_reorder(Team, n, .desc=T), y = n, label = label) +
  geom_bar(stat = "identity", fill = "#A11D21", width = 0.7) +
  geom_text(
    position = position_dodge(width = .9),
    vjust = -0.5, #hjust = .5,
    size = 3
  ) +
  labs(x = "Equipe", y = "Quantidade de medalhistas") +
  theme_estat() 
ggsave("colunas-uni-freq-solo.pdf", width = 158, height = 93, units = "mm")

#Ajeitando os dados para multivariado

female_medalhistEUA <- filter(female_medalhist, Team == "United States")
female_medalhistRUSSIA <- filter(female_medalhist, Team == "Russia")
female_medalhistGERMANY <- filter(female_medalhist, Team == "Germany")
female_medalhistCHINA <- filter(female_medalhist, Team == "China")
female_medalhistAUSTRALIA <- filter(female_medalhist, Team == "Australia")
female_medalhistMULTI <- rbind(female_medalhistAUSTRALIA, female_medalhistCHINA, female_medalhistEUA, female_medalhistGERMANY, female_medalhistRUSSIA)
top5_medalhist_gen <- female_medalhistMULTI %>% count(Team, Medal, sort = TRUE)
top5_medalhist_gen$Team <- factor(top5_medalhist_gen$Team, levels = c('Estados Unidos', 'Russia', 'Alemanha', 'China', 'Australia'))
top5_medalhist_gen$Medal <- factor(top5_medalhist_gen$Medal, levels = c('Ouro', 'Prata', 'Bronze'))
names(top5_medalhist_gen)[2] <- "Medalha"

#Criando o gráfico multivariado

ggplot(top5_medalhist_gen) +
  aes(
    x = fct_reorder(Team, n, .desc = T), y = n,
    fill = Medalha, label = n
  ) +
  geom_col(position = position_dodge2(preserve = "single", padding =
                                        0)) +
  geom_text(
    position = position_dodge(width = .9),
    vjust = -0.5, hjust = 0.5,
    size = 3
  ) +
  labs(x = "Equipes", y = "Quantidade de medalhas") +
  theme_estat()
ggsave("colunas-bi-freq.pdf", width = 158, height = 93, units = "mm")

################
#  Analise 2   #
################

#Criando a coluna IMC e colocando o peso e a altura na medida certa

Olimpiadas <- Olimpiadas_2000_2016
Olimpiadas$`Height (cm)` <- Olimpiadas$`Height (cm)` / 100
Olimpiadas$`Weight (lbs)` <- Olimpiadas$`Weight (lbs)` * 0.45359237
Olimpiadas$IMC <- Olimpiadas$`Weight (lbs)` / Olimpiadas$`Height (cm)`^2

#Traduzindo as variaveis

names(Olimpiadas)[4] <- "Altura (M)"
names(Olimpiadas)[5] <- "Peso (Kg)"
names(Olimpiadas)[7] <- "Esporte"

#Preparando o banco de dados para o gráfico

Olimpiadas <- count(Olimpiadas, Names, Esporte, IMC, sort = T)
Ginástica <- filter(Olimpiadas, Esporte == "Gymnastics")
Ginástica[2] <- "Ginástica"
Futebol <- filter(Olimpiadas, Esporte == "Football")
Futebol[2] <- "Futebol"
Judô <- filter(Olimpiadas, Esporte == "Judo")
Judô[2] <- "Judô"
Atletismo <- filter(Olimpiadas, Esporte == "Athletics")
Atletismo[2] <- "Atletismo"
Badminton <- filter(Olimpiadas, Esporte == "Badminton")
Esportes_analise <- rbind(Ginástica, Futebol, Judô, Atletismo, Badminton)
Esportes_analise <- filter(Esportes_analise, IMC != "NA")

#Gráfico

ggplot(Esportes_analise) +
  aes(x = reorder(Esporte,IMC , FUN = median), y = IMC) +
  geom_boxplot(fill = c("#A11D21"), width = 0.5) +
  stat_summary(
    fun = "mean", geom = "point", shape = 23, size = 3, fill = "white"
  ) +
  labs(x = "Esportes", y = "IMC")+
  theme_estat()
ggsave("box_est.pdf", width = 158, height = 93, units = "mm")

#Medidas IMC

describe(Futebol$IMC)
describe(Judô$IMC)
describe(Ginástica$IMC)
describe(Atletismo$IMC)
describe(Badminton$IMC)

################
#  Análise 3   #
################

#Organizando o banco de dados
AtletasUnidade <- count(Olimpiadas_2000_2016, Names, Medal, sort = T)
AtletasUnidade <- filter(AtletasUnidade, Medal != 'NA')
AtletasUni <- count(Olimpiadas_2000_2016, Names)
AtlestasUni <- AtlestasUni[order(AtlestasUni$n),]
AtletasTop3 <- AtletasUni[10473:10537,]
Top3Atletas <- filter(AtletasUnidade, Names == Atle)

################
#  Análise 4   #
################

#Preparando o banco de dados
Medalhistas <- filter(Olimpiadas_2000_2016, Medal != "NA")
Medalhistas_Pes <- count(Medalhistas, Names, Medalhistas$'Height (cm)', Medalhistas$'Weight (lbs)')
names(Medalhistas_Pes)[2] <- "Altura"
names(Medalhistas_Pes)[3] <- "Peso"
Medalhistas_Pes$Peso <- Medalhistas_Pes$Peso * 0.45359237
Medalhistas_Pes <- Medalhistas_Pes[-945,]
Medalhistas_Pes$Peso <- format(Medalhistas_Pes$Peso, nsmall = 0)

#O Gráfico de dispersão
ggplot(Medalhistas_Pes) +
  aes(x = Altura, y = Peso) +
  geom_point(colour = "#A11D21", size = 3) +
  labs(
    x = "Peso",
    y = "Altura"
  ) +
  theme_estat()
ggsave("disp_uni.pdf", width = 158, height = 93, units = "mm")

#Medidas
describe(Medalhistas_Pes$Altura)
describe(Medalhistas_Pes$Peso)
cor(Medalhistas_Pes$Altura, Medalhistas_Pes$Peso, method = "pearson")
